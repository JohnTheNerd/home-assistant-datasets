---
uuid: c74c2cf4-b64e-49a8-9a23-4487942d2baf
task_id: light_on_door_light_on_door-light_on_door-2
model_id: qwen3-30b-gptq
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  Here is a blueprint automation for turning on a light when a door opens, and turning it off when the door closes or after 2 minutes:

  ```yaml
  name: "Light on door"
  description: "Turn on a light when a door opens and turn it off after 2 minutes or when the door closes."
  use_blueprint: true
  inputs:
    door_sensor:
      name: "Door Sensor"
      description: "The binary sensor that detects when the door opens."
      type: binary_sensor
    light_switch:
      name: "Light Switch"
      description: "The light(s) to turn on when the door opens."
      type: light

  triggers:
    - platform: state
      entity_id: '{{ input.door_sensor }}'
      to: 'on'

  actions:
    - service: light.turn_on
      target:
        entity_id: '{{ input.light_switch }}'

    - service: homeassistant.turn_off
      target:
        entity_id: '{{ input.light_switch }}'
      delay: '00:02:00'

    - platform: state
      entity_id: '{{ input.door_sensor }}'
      to: 'off'
      trigger_on: 'on'
  ```
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JVHZ3FZDA3X2WB4RS5N3AGWJ
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-18 15:09:53.517556+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
          Current time is 08:09:53. Today's date is 2025-05-18.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          Here is a blueprint automation for turning on a light when a door opens, and turning it off when the door closes or after 2 minutes:

          ```yaml
          name: "Light on door"
          description: "Turn on a light when a door opens and turn it off after 2 minutes or when the door closes."
          use_blueprint: true
          inputs:
            door_sensor:
              name: "Door Sensor"
              description: "The binary sensor that detects when the door opens."
              type: binary_sensor
            light_switch:
              name: "Light Switch"
              description: "The light(s) to turn on when the door opens."
              type: light

          triggers:
            - platform: state
              entity_id: '{{ input.door_sensor }}'
              to: 'on'

          actions:
            - service: light.turn_on
              target:
                entity_id: '{{ input.light_switch }}'

            - service: homeassistant.turn_off
              target:
                entity_id: '{{ input.light_switch }}'
              delay: '00:02:00'

            - platform: state
              entity_id: '{{ input.door_sensor }}'
              to: 'off'
              trigger_on: 'on'
          ```
        tool_calls: null
      tools: null
    timestamp: 2025-05-18 15:09:53.519449+00:00
  duration_ms: 10546.03
  tries: 1
