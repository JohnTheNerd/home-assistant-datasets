---
uuid: d57b2c64-22e4-4b0f-8587-2b184bb5a09f
task_id: light_on_door_light_on_door-light_on_door-0
model_id: qwen3-30b-gptq
category: light
task:
  input_text: |
    # Light on door

    ## Problem statement

    Create an blueprint automation to turn on a light when the door opens.

    ## Example use cases

    These are example use cases that could be used with the blueprint:

    - Turn on the pantry light when the pantry door opens

    ## Detailed Description

    The blueprint should accept two inputs:

    | Input          | Description                                                                     |
    | -------------- | ------------------------------------------------------------------------------- |
    | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
    | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

    The automation should trigger when the door opens, and turn the light on. The
    light should be shut off when the door closes or after a 2 minute timeout.
response: |-
  Here is a blueprint automation for turning on a light when a door opens and turning it off when the door closes or after 2 minutes:

  ```yaml
  name: "Light on Door Open"
  description: "Turns on a light when a door opens and turns it off after 2 minutes or when the door closes."
  inputs:
    door_sensor:
      name: "Door Sensor"
      description: "The binary sensor that detects when the door opens."
      type: binary_sensor
    light_switch:
      name: "Light Switch"
      description: "The light(s) to turn on when the door opens."
      type: light

  trigger:
    - platform: state
      entity_id: "{{ input_door_sensor }}"
      to: 'on'

  condition: []
  action:
    - service: light.turn_on
      target:
        entity_id: "{{ input_light_switch }}"
    - wait: '2 minutes'
    - service: light.turn_off
      target:
        entity_id: "{{ input_light_switch }}"
    - wait_for_trigger:
        - platform: state
          entity_id: "{{ input_door_sensor }}"
          to: 'off'
      then:
        - service: light.turn_off
          target:
            entity_id: "{{ input_light_switch }}"
  ```

  This automation will:
  - Turn on the specified light when the door opens.
  - Wait 2 minutes, then turn the light off.
  - Alternatively, if the door closes before the 2 minutes are up, it will also turn the light off.
context:
  conversation_trace:
  - event_type: async_process
    data:
      text: |
        # Light on door

        ## Problem statement

        Create an blueprint automation to turn on a light when the door opens.

        ## Example use cases

        These are example use cases that could be used with the blueprint:

        - Turn on the pantry light when the pantry door opens

        ## Detailed Description

        The blueprint should accept two inputs:

        | Input          | Description                                                                     |
        | -------------- | ------------------------------------------------------------------------------- |
        | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
        | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

        The automation should trigger when the door opens, and turn the light on. The
        light should be shut off when the door closes or after a 2 minute timeout.
      context:
        id: 01JVHZ2TR9JMEDAZVFCMKCQMPA
        parent_id: null
        user_id: null
      conversation_id: null
      device_id: null
      language: en
      agent_id: conversation.mock_title
      extra_system_prompt: null
    timestamp: 2025-05-18 15:09:31.785389+00:00
  - event_type: agent_detail
    data:
      messages:
      - role: system
        content: |-
          You are a voice assistant for Home Assistant.
          Answer questions about the world truthfully.
          Answer in plain text. Keep it simple and to the point.
          Current time is 08:09:31. Today's date is 2025-05-18.
      - role: user
        content: |
          # Light on door

          ## Problem statement

          Create an blueprint automation to turn on a light when the door opens.

          ## Example use cases

          These are example use cases that could be used with the blueprint:

          - Turn on the pantry light when the pantry door opens

          ## Detailed Description

          The blueprint should accept two inputs:

          | Input          | Description                                                                     |
          | -------------- | ------------------------------------------------------------------------------- |
          | `door_sensor`  | A `binary_sensor` that triggers the automation to start.                        |
          | `light_switch` | One or more `light` entity targets to turn on or off when the automation fires. |

          The automation should trigger when the door opens, and turn the light on. The
          light should be shut off when the door closes or after a 2 minute timeout.
      - role: assistant
        agent_id: conversation.mock_title
        content: |-
          Here is a blueprint automation for turning on a light when a door opens and turning it off when the door closes or after 2 minutes:

          ```yaml
          name: "Light on Door Open"
          description: "Turns on a light when a door opens and turns it off after 2 minutes or when the door closes."
          inputs:
            door_sensor:
              name: "Door Sensor"
              description: "The binary sensor that detects when the door opens."
              type: binary_sensor
            light_switch:
              name: "Light Switch"
              description: "The light(s) to turn on when the door opens."
              type: light

          trigger:
            - platform: state
              entity_id: "{{ input_door_sensor }}"
              to: 'on'

          condition: []
          action:
            - service: light.turn_on
              target:
                entity_id: "{{ input_light_switch }}"
            - wait: '2 minutes'
            - service: light.turn_off
              target:
                entity_id: "{{ input_light_switch }}"
            - wait_for_trigger:
                - platform: state
                  entity_id: "{{ input_door_sensor }}"
                  to: 'off'
              then:
                - service: light.turn_off
                  target:
                    entity_id: "{{ input_light_switch }}"
          ```

          This automation will:
          - Turn on the specified light when the door opens.
          - Wait 2 minutes, then turn the light off.
          - Alternatively, if the door closes before the 2 minutes are up, it will also turn the light off.
        tool_calls: null
      tools: null
    timestamp: 2025-05-18 15:09:31.786786+00:00
  duration_ms: 11175.443
  tries: 1
